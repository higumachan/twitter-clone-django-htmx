"""
Django settings for twitter_clone_django_htmx project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import os
from pathlib import Path
from distutils.util import strtobool
from django.utils.translation import gettext_lazy as _
from django.conf.locale.en import formats as en_formats
from django.conf.locale.ja import formats as ja_formats
from datetime import timedelta

# ISO 8601, ex: 2008-01-02T10:30:00.000123+02:00
# NOTE: Will not show timezone offset if datetime object is "naive"
ja_formats.DATETIME_FORMAT = 'c'
en_formats.DATETIME_FORMAT = 'c'


BASE_DIR = Path(__file__).parent.parent.absolute()

SITE_HEADER = "REPLACE_ME SITE_HEADER"
SITE_TITLE = "REPLACE_ME SITE_TITLE"
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&37^bx2j^ji^mx3v)v0z91zs%^oy=ul!16_-gcd^twitter_clone_django_htmx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(strtobool(os.getenv('DEBUG', 'False')))

ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django_htmx",
    'commons',
    'accounts',
    'twitter'
]

AUTH_USER_MODEL = "accounts.CustomUser"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    "django_htmx.middleware.HtmxMiddleware",
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'twitter_clone_django_htmx.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'twitter_clone_django_htmx.context_processors.global_view_additional_context',  # PROVIDES settings.URL_PREFIX to context
            ],
        },
    },
]


WSGI_APPLICATION = 'twitter_clone_django_htmx.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME', 'twitter_clone_django_htmx'),
        'USER': os.getenv('DB_USER', 'postgres'),
        'PASSWORD': os.getenv('DB_PASS', 'mysecretpassword'),
        'HOST': os.getenv('DB_HOST', '127.0.0.1'),
        'PORT': os.getenv('DB_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
LANGUAGES = [
    ('ja', _('Japanese')),
    ('en', _('English')),
]

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

DEFAULT_URL_PREFIX = ""
URL_PREFIX = os.getenv("DJANGO_URL_PREFIX", DEFAULT_URL_PREFIX)
if URL_PREFIX and not URL_PREFIX.startswith("/"):
    URL_PREFIX = f"/{URL_PREFIX}"
STATIC_URL = f"{URL_PREFIX}/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

WHITENOISE_STATIC_PREFIX = "/static/"
STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}
STATICFILES_DIRS = []


DJANGO_LOG_LEVEL = os.getenv('DJANGO_LOG_LEVEL', 'INFO')
DJANGO_CORE_LOG_LEVEL = os.getenv('DJANGO_CORE_LOG_LEVEL', 'INFO')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '{asctime} [{levelname:5}] ({name}) {funcName}: {message}',
            'style': '{',
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'standard',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': DJANGO_CORE_LOG_LEVEL,  # Change to DEBUG to see db queries
        },
        'accounts': {
            'handlers': ['console'],
            'level': DJANGO_LOG_LEVEL,
            'propagate': True,
        },
        'commons': {
            'handlers': ['console'],
            'level': DJANGO_LOG_LEVEL,
            'propagate': True,
        },
        'twitter': {
            'handlers': ['console'],
            'level': DJANGO_LOG_LEVEL,
            'propagate': True,
        },
        # add additional apps here
    },
}

AWS_REGION = os.getenv('AWS_DEFAULT_REGION', 'ap-northeast-1')

# CSRF Settings
# https://docs.djangoproject.com/en/2.2/ref/settings/#std:setting-CSRF_COOKIE_HTTPONLY
CSRF_COOKIE_SECURE = False
DEFAULT_CSRF_USE_SESSIONS = 'True'
CSRF_USE_SESSIONS = bool(strtobool(os.getenv('DJANGO_CSRF_USE_SESSIONS', DEFAULT_CSRF_USE_SESSIONS)))


AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
)

DEBUG = True